---
- name: Config Deb11
  hosts: all
  become: true
  vars_files:
    - secrets.yml

  tasks:
    - name: Set timezone +0 (UTC)
      ansible.builtin.timezone:
        name: Etc/UTC
    - name: Remove user debian
      ansible.builtin.user:
        name: debian
        state: absent
        remove: true
    - name: update apt cache
      ansible.builtin.apt:
        update_cache: true
    - name: Install list of packages
      ansible.builtin.apt:
        pkg:
          - libfreetype6
          - libfreetype6-dev
          - zlib1g
          - zlib1g-dev
          - libxml2
          - libxml2-dev
          - libxslt1-dev
          - libxslt1.1
          - gcc
          - curl
          - make
          - libcurl4-openssl-dev
          - libssl-dev
          - mc
          - wget
          - aptitude
          - unzip
          - htop
          - nload
          - libffi-dev
          - libmariadb-dev
          - default-libmysqlclient-dev
          - mariadb-client
          - gnupg2
          - pkg-config
          - tcl
          - git
          - sendmail
          - openssl
          - python3
          - python3-pip
          - python-setuptools
          - screen
          - ethtool
          - openssl
          - nodejs
          - npm
        state: latest
        update_cache: true
    - name: install nginx latest version
      ansible.builtin.apt:
        name: nginx
        state: latest
    - name: install reqired depend for mysql
      ansible.builtin.apt:
        name:
          - debconf-utils
        state: present
        update_cache: true
    - name: download config package mysql
      ansible.builtin.command: >
        curl -L -o /tmp/mysql-apt-config.deb
        https://dev.mysql.com/get/mysql-apt-config_0.8.28-1_all.deb
      args:
        creates: /tmp/mysql-apt-config.deb
    - name: configure mysql repo
      ansible.builtin.shell: |
        echo "mysql-apt-config mysql-apt-config/select-server select mysql-5.7" | debconf-set-selections
        echo "mysql-apt-config mysql-apt-config/select-product select Ok" | debconf-set-selections
        DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config.deb
      args:
        executable: /bin/bash
    - name: set mysql root password
      ansible.builtin.debconf:
        name: mysql-server
        question: mysql-server/root_password
        value: "{{ mysql_root_password }}"
        vtype: password
    - name: confirm mysql root password
      ansible.builtin.debconf:
        name: mysql-server
        question: mysql-server/root_password_again
        value: "{{ mysql_root_password }}"
        vtype: password
    - name: install mysql 5.7 server and client
      ansible.builtin.apt:
        name:
          - mysql-server
          - mysql-client
        state: present
      environment:
        DEBIAN_FRONTEND: noninteractive
    - name: check mysql sevice
      ansible.builtin.systemd:
        name: mysql
        state: started
        enabled: true
    - name: test mysql connect
      ansible.builtin.shell: |
        mysql -u root -p"{{ mysql_root_password }}" -e "SELECT VERSION():"
      args:
        executable: /bin/bash
      register: mysql_test
      changed_when: false
    - name: succes message
      ansible.builtin.debug:
        msg: "âœ… MySQL {{ mysql_test.stdout }} installed successfull!!"
    - name: clean up tmp file
      ansible.builtin.file:
        path: /tmp/mysql-apt-config.deb
        state: absent
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
    - name: install build py depend
      ansible.builtin.apt:
        name:
          - build-essential
          - wget
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - libffi-dev
          - libncurses5-dev
          - libgdbm-dev
          - liblzma-dev
          - tk-dev
          - libcurl4-openssl-dev
          - default-libmysqlclient-dev
          - pkg-config
          - ca-certificates
        state: present
    - name: Ensure source directory exists
      ansible.builtin.file:
        path: /usr/local/src
        state: directory
        mode: "0755"
    - name: Download Python 3.9.6 source
      ansible.builtin.get_url:
        url: https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz
        dest: /usr/local/src/Python-3.9.6.tgz
        mode: "0644"
        use_proxy: false
        timeout: 120
    - name: Extract Python source
      ansible.builtin.unarchive:
        src: /usr/local/src/Python-3.9.6.tgz
        dest: /usr/local/src/
        remote_src: true
    - name: Configure Py
      ansible.builtin.command:
        cmd: ./configure --prefix=/opt/python3
        chdir: /usr/local/src/Python-3.9.6
      args:
        creates: /usr/local/src/Python-3.9.6/Makefile
    - name: Build Python
      ansible.builtin.command:
        cmd: make -j 2
        chdir: /usr/local/src/Python-3.9.6
      args:
        creates: /usr/local/src/Python-3.9.6/python
